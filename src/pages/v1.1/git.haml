= partial('v1.1/shared/message')
%h2 Gems from git repositories

.contents
  .bullet
    .description
      Bundler adds the ability to use gems directly from git repositories. Setting
      them up is as easy as adding a gem to your Gemfile. Using the very latest
      version of a gem (or even a fork) is just as easy as using an official
      release.
    .description
      Because Rubygems lacks the ability to handle gems from git, any gems
      installed from a git repository will not show up in <code>gem list</code>.
      They will, however, be available after running <code>Bundler.setup</code>.

  .bullet
    .description
      Specify that a gem should come from a git
      repository with a .gemspec at its root
    :highlight_ruby
      gem "nokogiri", :git => "git://github.com/tenderlove/nokogiri.git"

  .bullet
    .description
      If there is no .gemspec at the root of
      a git repository, you must specify a version
      that bundler should use when resolving
      dependencies
    :highlight_ruby
      gem "deep_merge", "1.0", :git => "git://github.com/peritor/deep_merge.git"

  .bullet
    .description
      Specify that a git repository containing
      multiple .gemspec files should be treated
      as a gem source
    :highlight_ruby
      git "git://github.com/rails/rails.git" do
        gem "railties"
        gem "action_pack"
        gem "active_model"
      end

  .bullet
    .description
      Specify that a git repository should use
      a particular ref, branch, or tag
    :highlight_ruby
      :git => "git://github.com/rails/rails.git", :ref => "4aded"
      :git => "git://github.com/rails/rails.git", :branch => "2-3-stable"
      :git => "git://github.com/rails/rails.git", :tag => "v2.3.5"

  .bullet
    .description
      Specifying a ref, branch, or tag for a
      git repository specified inline works
      exactly the same way
    :highlight_ruby
      gem "nokogiri", :git => "git://github.com/tenderlove/nokogiri.git", :ref => "0eec4"
