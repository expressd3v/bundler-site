%h2 Deploying bundled applications

.contents
  .bullet
    .description
      Add your <code>Gemfile</code> and <code>Gemfile.lock</code> to 
      source control, but ignore the <code>.bundle</code> folder, 
      which is specific to each machine.
    :highlight_plain
      $ echo ".bundle\n" >> .gitignore
      $ git add Gemfile Gemfile.lock .gitignore
      $ git commit -m "Add Bundler support"

  .bullet
    .description
      In your deploy script, after updating to the latest
      code, install your bundle to the <code>vendor/bundle</code>
      directory, ensuring all your dependencies are met.
    :highlight_plain
      $ bundle install --deployment
    .notes
      %p
        Start your application servers as usual, and your
        application will use your bundled environment
        just like it does locally in development.

      %p
        If you have run <code>bundle package</code>, the cached
        gems will be used automatically.

      = link("Learn More: Packing", "./bundle_package.html")

  .bullet
    .description
      If you are using Capistrano, pull in the default Cap task in
      your <code>deploy.rb</code> file
    :highlight_ruby
      require "bundler/capistrano"

  .bullet
    .description
      Make sure to use <code>bundle exec</code> before any executables
      from gems in the bundle
    :highlight_plain
      $ bundle exec rake db:setup
