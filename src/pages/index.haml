%h2 What is Bundler?

#intro
  Bundler is a tool that maintains a consistent environment for a developer’s code across all machines. When a developer’s code is run on different machines, the libraries the developer originally built their code on may change. This breaks the developer’s application. Bundler ensures that the libraries will remain the same, taping everything together so that the developer’s application runs smoothly on every machine where it is deployed.

%h2#getting-started
  Getting Started

.contents
  .bullet
    .description
      Getting started with bundler is easy! Open a terminal window and type the following:
    :highlight_plain
      $ gem install bundler

  .bullet
    .description
      Specify your dependencies in a Gemfile in your project's root:
    :highlight_ruby
      source "http://rubygems.org"
      gem "nokogiri"
      gem "rack", "~>1.1"
      gem "rspec", :require => "spec"
    = link("Learn More: Gemfiles", "/v1.2/gemfile.html")

  .bullet
    .description
      Install all of the required gems from your specified sources:
    :highlight_plain
      $ bundle install
      $ git add Gemfile Gemfile.lock
    = link("Learn More: bundle install", "/v1.2/bundle_install.html")
    .notes
      The second command adds the Gemfile and Gemfile.lock to your repository. This ensures
      that other developers on your app, as well as your deployment environment, will all use
      the same third-party code that you are using now.

  .bullet
    .description
      Inside your app, load up the bundled environment:
    :highlight_ruby
      require "rubygems"
      require "bundler/setup"

      # require your gems as usual
      require "nokogiri"
    = link("Learn More: Bundler.setup", "/v1.2/bundler_setup.html")
  .bullet
    .description
      Run an executable that comes with a gem in your bundle:
    :highlight_plain
      $ bundle exec rspec spec/models
    .notes
      %p
        In some cases, running executables without <code>bundle exec</code>
        may work, if the executable happens to be installed in your system
        and does not pull in any gems that conflict with your bundle.
      %p
        However, this is unreliable and is the source of considerable pain.
        Even if it looks like it works, it may not work in the future or
        on another machine.

    .description
      Finally, if you want a way to get a shortcut to gems in your bundle:
    :highlight_plain
      $ bundle install --binstubs
      $ bin/rspec spec/models
    .notes
      The executables installed into <code>bin</code> are scoped to the
      bundle, and will always work.
    = link("Learn More: Executables", "/v1.2/man/bundle-exec.1.html")

%h2 Use Bundler with
.buttons
  = link("Rails 3", "/v1.2/rails3.html")
  = link("Rails 2.3", "/v1.2/rails23.html")
  = link("Sinatra", "/v1.2/sinatra.html")
  = link("Rubygems", "/v1.2/rubygems.html")
  = link("RubyMotion", "/v1.2/rubymotion.html")

%h2 Learn about
.buttons
  = link("Installing dependencies", "/v1.2/bundle_install.html")
  = link("Updating dependencies", "/v1.2/man/bundle-update.1.html")
  = link("Deploying", "/v1.2/deploying.html")
.buttons
  = link("Git gems", "/v1.2/git.html")
  = link("Gemfile", "/v1.2/gemfile.html")
  = link("Bundler commands", "/v1.2/commands.html")

%h2 More about
.buttons
  = link("Why Bundler exists", "/v1.2/rationale.html")
  = link("Troubleshooting", "https://github.com/carlhuda/bundler/blob/1-2-stable/ISSUES.md")
  = link("What's New", "/v1.2/whats_new.html")

.shirts
  .content
    = img("/images/bundler-shirt.png")
    %p
      Want to show the world you support Bundler?
      %br
      Buy Bundler shirts and stickers at
      = link("DevSwag", "http://www.devswag.com/collections/bundler")