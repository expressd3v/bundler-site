%h2 Using Groups

.contents
  .bullet
    .description
      Grouping your dependencies allows you
      to perform operations on the entire
      group.
    :code
      # lang: ruby
      # These gems are in the :default group
      gem 'nokogiri'
      gem 'sinatra'

      gem 'wirble', :group => :development

      group :test do
        gem 'faker'
        gem 'rspec'
      end

      group :test, :development do
        gem 'capybara'
        gem 'rspec-rails'
      end

      gem 'cucumber', :group => [:cucumber, :test]

  .bullet
    .description
      Install all gems, except those in the
      listed groups. Gems in at least one
      non-excluded group will still be installed.
    :code
      $ bundle install --without test development

  .bullet
    .description
      Require the gems in particular groups,
      noting that gems outside of a named group
      are in the :default group
    :code
      # lang: ruby
      Bundler.require(:default, :development)

  .bullet
    .description
      Require the default gems, plus the gems
      in a group named the same as the current
      Rails environment
    :code
      # lang: ruby
      Bundler.require(:default, Rails.env)

  .bullet
    .description
      Restrict the groups of gems that you
      want to add to the load path. Only gems
      in these groups will be require'able
    :code
      # lang: ruby
      require 'rubygems'
      require 'bundler'
      Bundler.setup(:default, :ci)
      require 'nokogiri'
    = link_to 'Learn More: Bundler.setup', './bundler_setup.html'
